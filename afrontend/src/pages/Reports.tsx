import { useEffect, useState } from "react";
import { Box, Typography, Button } from "@mui/material";
import jsPDF from "jspdf";
import autoTable from "jspdf-autotable";

const Reports = () => {
  const [reports, setReports] = useState<any[]>([]);

  useEffect(() => {
    const now = new Date();
    const currentMonth = now.toLocaleString("default", { month: "long" });
    const currentYear = now.getFullYear();
    const reportName = `Report for ${currentMonth} ${currentYear}`;

    const existing = reports.find((r) => r.name === reportName);
    if (!existing) {
      const newReport = {
        id: reports.length + 1,
        name: reportName,
        createdAt: now.toISOString(),
      };
      setReports((prev) => [...prev, newReport]);
    }
  }, []);

  const handleDownload = (report: any) => {
    const doc = new jsPDF();
    const logo = new Image();
    logo.src = "/logos/uas-motors-logo.png";

    logo.onload = () => {
      doc.addImage(logo, "PNG", 10, 10, 30, 30);
      doc.setFontSize(16);
      doc.text(report.name, 50, 25);

      autoTable(doc, {
        startY: 50,
        head: [["Section", "Details"]],
        body: [
          [
            "Inventory Summary",
            "Total purchased, sold, profit/loss... (TODO: /api/inventory/report)",
          ],
          [
            "Invoice Summary",
            "Total billed, paid, unpaid... (TODO: /api/invoices/summary)",
          ],
          [
            "Quotation Overview",
            "Quotes sent, value estimate... (TODO: /api/quotations/summary)",
          ],
          [
            "Payroll Summary",
            "Salaries paid, deductions, net pay... (TODO: /api/payroll/monthly)",
          ],
          [
            "Customer Overview",
            "New customers, top spenders... (TODO: /api/customers/summary)",
          ],
        ],
        styles: { fontSize: 10 },
        headStyles: { fillColor: [22, 160, 133] },
      });

      doc.text("Generated by Garage System", 14, doc.lastAutoTable.finalY + 20);
      doc.save(`${report.name.replaceAll(" ", "_")}.pdf`);
    };
  };

  return (
    <Box className="max-w-5xl mx-auto mt-10 p-8 bg-white rounded-xl shadow-xl text-black">
      <Typography
        variant="h4"
        className="mb-6 font-bold text-center text-gray-800"
      >
        Monthly Reports
      </Typography>

      <div className="grid grid-cols-1 gap-4">
        {reports.map((report, index) => (
          <Box
            key={report.id}
            className="flex items-center justify-between border p-4 rounded-lg shadow-sm"
          >
            <Typography className="font-medium">
              {index + 1}. {report.name}
            </Typography>
            <Button
              variant="contained"
              color="primary"
              onClick={() => handleDownload(report)}
            >
              Download
            </Button>
          </Box>
        ))}
      </div>
    </Box>
  );
};

export default Reports;
